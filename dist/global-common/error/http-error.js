"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Unauthorized = exports.RESTRICTED_USER = exports.RESOURCE_CONFLICT = exports.OTP_TIME_OUT = exports.OTP_NOT_MATCH = exports.OBSOLETE_VERSION = exports.NotFound = exports.NO_USER_ABOUT_JWT = exports.NO_USER = exports.NO_URL_OR_METHOD = exports.NO_RESOURCE = exports.NO_JWT = exports.NO_DATA = exports.NO_AUTH = exports.NOT_PROPER_AUTH = exports.NOT_MEMBER = exports.NOT_EXPIRED_JWT = exports.NOT_AUTHORIZED = exports.NOT_ACTIVATED = exports.InterruptError = exports.InternalServerError = exports.INVALID_REQUEST = exports.INVALID_REFRESH_JWT = exports.INVALID_PASSWORD = exports.INVALID_MEMBER = exports.INVALID_KEY = exports.INVALID_JWT = exports.INVALID_INPUT = exports.INT_API_CALL_FAIL = exports.INTERNAL_SERVER_PROBLEM = exports.Forbidden = exports.FORBIDDEN_FILE = exports.EXT_API_CALL_FAIL = exports.EXPIRED_REFRESH_JWT = exports.EXPIRED_JWT = exports.EXIST_TRANSFERRING = exports.EXIST_ATTEND_CANCELED = exports.EXCEED_REQUEST = exports.EXCEED_OTP_REQUEST_PER_DAY = exports.EXCEED_ACCOUNT = exports.ENCRYPT_FAILED = exports.DUPLICATE_REQUEST = exports.DELETED_USER = exports.Conflict = exports.CallbackFailError = exports.BadRequest = exports.BadEntity = exports.AppError = exports.AWAITING_APPROVAL = exports.ALREADY_EXISTS = void 0;
/* Worker error code */
const NO_USER = 'NO_USER';
exports.NO_USER = NO_USER;
const INVALID_PASSWORD = 'INVALID_PASSWORD';
exports.INVALID_PASSWORD = INVALID_PASSWORD;
const INVALID_MEMBER = 'INVALID_MEMBER';
exports.INVALID_MEMBER = INVALID_MEMBER;
const RESTRICTED_USER = 'RESTRICTED_USER';
exports.RESTRICTED_USER = RESTRICTED_USER;
const DELETED_USER = 'DELETED_USER';
exports.DELETED_USER = DELETED_USER;
const NOT_PROPER_AUTH = 'NOT_PROPER_AUTH';
exports.NOT_PROPER_AUTH = NOT_PROPER_AUTH;
const NO_AUTH = 'NO_AUTH';
exports.NO_AUTH = NO_AUTH;
const NOT_MEMBER = 'NOT_MEMBER';
exports.NOT_MEMBER = NOT_MEMBER;
const EXIST_ATTEND_CANCELED = 'EXIST_ATTEND_CANCELED';
exports.EXIST_ATTEND_CANCELED = EXIST_ATTEND_CANCELED;
const EXCEED_ACCOUNT = 'EXCEED_ACCOUNT';
exports.EXCEED_ACCOUNT = EXCEED_ACCOUNT;
const EXCEED_REQUEST = 'EXCEED_REQUEST';
exports.EXCEED_REQUEST = EXCEED_REQUEST;
const EXIST_TRANSFERRING = 'EXIST_TRANSFERRING';

// common error
exports.EXIST_TRANSFERRING = EXIST_TRANSFERRING;
const ALREADY_EXISTS = 'ALREADY_EXISTS';
exports.ALREADY_EXISTS = ALREADY_EXISTS;
const INVALID_INPUT = 'INVALID_INPUT';
exports.INVALID_INPUT = INVALID_INPUT;
const NO_URL_OR_METHOD = 'NO_URL_OR_METHOD';
exports.NO_URL_OR_METHOD = NO_URL_OR_METHOD;
const NO_RESOURCE = 'NO_RESOURCE';
exports.NO_RESOURCE = NO_RESOURCE;
const INVALID_KEY = 'INVALID_KEY';
exports.INVALID_KEY = INVALID_KEY;
const RESOURCE_CONFLICT = 'RESOURCE_CONFLICT';
exports.RESOURCE_CONFLICT = RESOURCE_CONFLICT;
const INVALID_REQUEST = 'INVALID_REQUEST';
exports.INVALID_REQUEST = INVALID_REQUEST;
const EXT_API_CALL_FAIL = 'EXT_API_CALL_FAIL';
exports.EXT_API_CALL_FAIL = EXT_API_CALL_FAIL;
const INT_API_CALL_FAIL = 'INT_API_CALL_FAIL';
exports.INT_API_CALL_FAIL = INT_API_CALL_FAIL;
const FORBIDDEN_FILE = 'FORBIDDEN_FILE';
exports.FORBIDDEN_FILE = FORBIDDEN_FILE;
const DUPLICATE_REQUEST = 'DUPLICATE_REQUEST';
exports.DUPLICATE_REQUEST = DUPLICATE_REQUEST;
const INTERNAL_SERVER_PROBLEM = 'INTERNAL_SERVER_PROBLEM';

// otp
exports.INTERNAL_SERVER_PROBLEM = INTERNAL_SERVER_PROBLEM;
const OTP_NOT_MATCH = 'OTP_NOT_MATCH';
exports.OTP_NOT_MATCH = OTP_NOT_MATCH;
const EXCEED_OTP_REQUEST_PER_DAY = 'EXCEED_OTP_REQUEST_PER_DAY';
exports.EXCEED_OTP_REQUEST_PER_DAY = EXCEED_OTP_REQUEST_PER_DAY;
const OTP_TIME_OUT = 'OTP_TIME_OUT';

// admin error
exports.OTP_TIME_OUT = OTP_TIME_OUT;
const NOT_ACTIVATED = 'NOT_ACTIVATED';
exports.NOT_ACTIVATED = NOT_ACTIVATED;
const AWAITING_APPROVAL = 'AWAITING_APPROVAL';

// version errror
exports.AWAITING_APPROVAL = AWAITING_APPROVAL;
const OBSOLETE_VERSION = 'OBSOLETE_VERSION';

/* etc error code */
exports.OBSOLETE_VERSION = OBSOLETE_VERSION;
const NO_DATA = 'NO_DATA';

/* JWT error code */
exports.NO_DATA = NO_DATA;
const NO_JWT = 'NO_JWT';
exports.NO_JWT = NO_JWT;
const INVALID_JWT = 'INVALID_JWT';
exports.INVALID_JWT = INVALID_JWT;
const EXPIRED_JWT = 'EXPIRED_JWT';
exports.EXPIRED_JWT = EXPIRED_JWT;
const NO_USER_ABOUT_JWT = 'NO_USER_ABOUT_JWT';
exports.NO_USER_ABOUT_JWT = NO_USER_ABOUT_JWT;
const NOT_EXPIRED_JWT = 'NOT_EXPIRED_JWT';
exports.NOT_EXPIRED_JWT = NOT_EXPIRED_JWT;
const INVALID_REFRESH_JWT = 'INVALID_REFRESH_JWT';
exports.INVALID_REFRESH_JWT = INVALID_REFRESH_JWT;
const EXPIRED_REFRESH_JWT = 'EXPIRED_REFRESH_JWT';
exports.EXPIRED_REFRESH_JWT = EXPIRED_REFRESH_JWT;
const NOT_AUTHORIZED = 'NOT_AUTHORIZED';

// encypt / decrypt
exports.NOT_AUTHORIZED = NOT_AUTHORIZED;
const ENCRYPT_FAILED = 'ECRYPT_FAILED';
exports.ENCRYPT_FAILED = ENCRYPT_FAILED;
class AppError extends Error {
  constructor(code, message, status = BadRequest.STATUS) {
    super(message);
    this.code = code;
    this.status = status;
  }
}
exports.AppError = AppError;
class BadRequest extends AppError {
  static STATUS = 400;
  constructor(code, message, status = BadRequest.STATUS) {
    super(code, message, status);
  }
}
exports.BadRequest = BadRequest;
class Unauthorized extends AppError {
  static STATUS = 401;
  constructor(code, message, status = Unauthorized.STATUS) {
    super(code, message, status);
  }
}
exports.Unauthorized = Unauthorized;
class Forbidden extends AppError {
  static STATUS = 403;
  constructor(code, message, status = Forbidden.STATUS) {
    super(code, message, status);
  }
}
exports.Forbidden = Forbidden;
class NotFound extends AppError {
  static STATUS = 404;
  constructor(code, message, status = NotFound.STATUS) {
    super(code, message, status);
  }
}
exports.NotFound = NotFound;
class Conflict extends AppError {
  static STATUS = 409;
  constructor(code, message, status = Conflict.STATUS) {
    super(code, message, status);
  }
}
exports.Conflict = Conflict;
class BadEntity extends AppError {
  static STATUS = 422;
  constructor(code, message, status = BadEntity.STATUS) {
    super(code, message, status);
  }
}
exports.BadEntity = BadEntity;
class InternalServerError extends AppError {
  static STATUS = 500;
  constructor(code = INTERNAL_SERVER_PROBLEM, message, status = InternalServerError.STATUS) {
    super(code, message, status);
  }
}
exports.InternalServerError = InternalServerError;
class CallbackFailError extends AppError {
  static STATUS = 500;
  constructor(code, message, status = CallbackFailError.STATUS) {
    super(code, message, status);
  }
}
exports.CallbackFailError = CallbackFailError;
class InterruptError extends AppError {
  static STATUS = 500;
  constructor(code, message, status = InterruptError.STATUS) {
    super(code, message, status);
  }
}
exports.InterruptError = InterruptError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOT19VU0VSIiwiSU5WQUxJRF9QQVNTV09SRCIsIklOVkFMSURfTUVNQkVSIiwiUkVTVFJJQ1RFRF9VU0VSIiwiREVMRVRFRF9VU0VSIiwiTk9UX1BST1BFUl9BVVRIIiwiTk9fQVVUSCIsIk5PVF9NRU1CRVIiLCJFWElTVF9BVFRFTkRfQ0FOQ0VMRUQiLCJFWENFRURfQUNDT1VOVCIsIkVYQ0VFRF9SRVFVRVNUIiwiRVhJU1RfVFJBTlNGRVJSSU5HIiwiQUxSRUFEWV9FWElTVFMiLCJJTlZBTElEX0lOUFVUIiwiTk9fVVJMX09SX01FVEhPRCIsIk5PX1JFU09VUkNFIiwiSU5WQUxJRF9LRVkiLCJSRVNPVVJDRV9DT05GTElDVCIsIklOVkFMSURfUkVRVUVTVCIsIkVYVF9BUElfQ0FMTF9GQUlMIiwiSU5UX0FQSV9DQUxMX0ZBSUwiLCJGT1JCSURERU5fRklMRSIsIkRVUExJQ0FURV9SRVFVRVNUIiwiSU5URVJOQUxfU0VSVkVSX1BST0JMRU0iLCJPVFBfTk9UX01BVENIIiwiRVhDRUVEX09UUF9SRVFVRVNUX1BFUl9EQVkiLCJPVFBfVElNRV9PVVQiLCJOT1RfQUNUSVZBVEVEIiwiQVdBSVRJTkdfQVBQUk9WQUwiLCJPQlNPTEVURV9WRVJTSU9OIiwiTk9fREFUQSIsIk5PX0pXVCIsIklOVkFMSURfSldUIiwiRVhQSVJFRF9KV1QiLCJOT19VU0VSX0FCT1VUX0pXVCIsIk5PVF9FWFBJUkVEX0pXVCIsIklOVkFMSURfUkVGUkVTSF9KV1QiLCJFWFBJUkVEX1JFRlJFU0hfSldUIiwiTk9UX0FVVEhPUklaRUQiLCJFTkNSWVBUX0ZBSUxFRCIsIkFwcEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImNvZGUiLCJtZXNzYWdlIiwic3RhdHVzIiwiQmFkUmVxdWVzdCIsIlNUQVRVUyIsIlVuYXV0aG9yaXplZCIsIkZvcmJpZGRlbiIsIk5vdEZvdW5kIiwiQ29uZmxpY3QiLCJCYWRFbnRpdHkiLCJJbnRlcm5hbFNlcnZlckVycm9yIiwiQ2FsbGJhY2tGYWlsRXJyb3IiLCJJbnRlcnJ1cHRFcnJvciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nbG9iYWwtY29tbW9uL2Vycm9yL2h0dHAtZXJyb3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogV29ya2VyIGVycm9yIGNvZGUgKi9cclxuZXhwb3J0IGNvbnN0IE5PX1VTRVIgPSAnTk9fVVNFUidcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfUEFTU1dPUkQgPSAnSU5WQUxJRF9QQVNTV09SRCdcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfTUVNQkVSID0gJ0lOVkFMSURfTUVNQkVSJ1xyXG5leHBvcnQgY29uc3QgUkVTVFJJQ1RFRF9VU0VSID0gJ1JFU1RSSUNURURfVVNFUidcclxuZXhwb3J0IGNvbnN0IERFTEVURURfVVNFUiA9ICdERUxFVEVEX1VTRVInXHJcbmV4cG9ydCBjb25zdCBOT1RfUFJPUEVSX0FVVEggPSAnTk9UX1BST1BFUl9BVVRIJ1xyXG5leHBvcnQgY29uc3QgTk9fQVVUSCA9ICdOT19BVVRIJ1xyXG5leHBvcnQgY29uc3QgTk9UX01FTUJFUiA9ICdOT1RfTUVNQkVSJ1xyXG5leHBvcnQgY29uc3QgRVhJU1RfQVRURU5EX0NBTkNFTEVEID0gJ0VYSVNUX0FUVEVORF9DQU5DRUxFRCdcclxuZXhwb3J0IGNvbnN0IEVYQ0VFRF9BQ0NPVU5UID0gJ0VYQ0VFRF9BQ0NPVU5UJ1xyXG5leHBvcnQgY29uc3QgRVhDRUVEX1JFUVVFU1QgPSAnRVhDRUVEX1JFUVVFU1QnXHJcbmV4cG9ydCBjb25zdCBFWElTVF9UUkFOU0ZFUlJJTkcgPSAnRVhJU1RfVFJBTlNGRVJSSU5HJ1xyXG5cclxuLy8gY29tbW9uIGVycm9yXHJcbmV4cG9ydCBjb25zdCBBTFJFQURZX0VYSVNUUyA9ICdBTFJFQURZX0VYSVNUUydcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfSU5QVVQgPSAnSU5WQUxJRF9JTlBVVCdcclxuZXhwb3J0IGNvbnN0IE5PX1VSTF9PUl9NRVRIT0QgPSAnTk9fVVJMX09SX01FVEhPRCdcclxuZXhwb3J0IGNvbnN0IE5PX1JFU09VUkNFID0gJ05PX1JFU09VUkNFJ1xyXG5leHBvcnQgY29uc3QgSU5WQUxJRF9LRVkgPSAnSU5WQUxJRF9LRVknXHJcbmV4cG9ydCBjb25zdCBSRVNPVVJDRV9DT05GTElDVCA9ICdSRVNPVVJDRV9DT05GTElDVCdcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVRVUVTVCA9ICdJTlZBTElEX1JFUVVFU1QnXHJcbmV4cG9ydCBjb25zdCBFWFRfQVBJX0NBTExfRkFJTCA9ICdFWFRfQVBJX0NBTExfRkFJTCdcclxuZXhwb3J0IGNvbnN0IElOVF9BUElfQ0FMTF9GQUlMID0gJ0lOVF9BUElfQ0FMTF9GQUlMJ1xyXG5leHBvcnQgY29uc3QgRk9SQklEREVOX0ZJTEUgPSAnRk9SQklEREVOX0ZJTEUnXHJcbmV4cG9ydCBjb25zdCBEVVBMSUNBVEVfUkVRVUVTVCA9ICdEVVBMSUNBVEVfUkVRVUVTVCdcclxuZXhwb3J0IGNvbnN0IElOVEVSTkFMX1NFUlZFUl9QUk9CTEVNID0gJ0lOVEVSTkFMX1NFUlZFUl9QUk9CTEVNJ1xyXG5cclxuLy8gb3RwXHJcbmV4cG9ydCBjb25zdCBPVFBfTk9UX01BVENIID0gJ09UUF9OT1RfTUFUQ0gnXHJcbmV4cG9ydCBjb25zdCBFWENFRURfT1RQX1JFUVVFU1RfUEVSX0RBWSA9ICdFWENFRURfT1RQX1JFUVVFU1RfUEVSX0RBWSdcclxuZXhwb3J0IGNvbnN0IE9UUF9USU1FX09VVCA9ICdPVFBfVElNRV9PVVQnXHJcblxyXG4vLyBhZG1pbiBlcnJvclxyXG5leHBvcnQgY29uc3QgTk9UX0FDVElWQVRFRCA9ICdOT1RfQUNUSVZBVEVEJ1xyXG5leHBvcnQgY29uc3QgQVdBSVRJTkdfQVBQUk9WQUwgPSAnQVdBSVRJTkdfQVBQUk9WQUwnXHJcblxyXG4vLyB2ZXJzaW9uIGVycnJvclxyXG5leHBvcnQgY29uc3QgT0JTT0xFVEVfVkVSU0lPTiA9ICdPQlNPTEVURV9WRVJTSU9OJ1xyXG5cclxuLyogZXRjIGVycm9yIGNvZGUgKi9cclxuZXhwb3J0IGNvbnN0IE5PX0RBVEEgPSAnTk9fREFUQSdcclxuXHJcbi8qIEpXVCBlcnJvciBjb2RlICovXHJcbmV4cG9ydCBjb25zdCBOT19KV1QgPSAnTk9fSldUJ1xyXG5leHBvcnQgY29uc3QgSU5WQUxJRF9KV1QgPSAnSU5WQUxJRF9KV1QnXHJcbmV4cG9ydCBjb25zdCBFWFBJUkVEX0pXVCA9ICdFWFBJUkVEX0pXVCdcclxuZXhwb3J0IGNvbnN0IE5PX1VTRVJfQUJPVVRfSldUID0gJ05PX1VTRVJfQUJPVVRfSldUJ1xyXG5leHBvcnQgY29uc3QgTk9UX0VYUElSRURfSldUID0gJ05PVF9FWFBJUkVEX0pXVCdcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVGUkVTSF9KV1QgPSAnSU5WQUxJRF9SRUZSRVNIX0pXVCdcclxuZXhwb3J0IGNvbnN0IEVYUElSRURfUkVGUkVTSF9KV1QgPSAnRVhQSVJFRF9SRUZSRVNIX0pXVCdcclxuZXhwb3J0IGNvbnN0IE5PVF9BVVRIT1JJWkVEID0gJ05PVF9BVVRIT1JJWkVEJ1xyXG5cclxuLy8gZW5jeXB0IC8gZGVjcnlwdFxyXG5leHBvcnQgY29uc3QgRU5DUllQVF9GQUlMRUQgPSAnRUNSWVBUX0ZBSUxFRCdcclxuXHJcbmV4cG9ydCBjbGFzcyBBcHBFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvciAocHVibGljIGNvZGUsIG1lc3NhZ2UsIHB1YmxpYyBzdGF0dXMgPSBCYWRSZXF1ZXN0LlNUQVRVUykge1xyXG4gICAgc3VwZXIobWVzc2FnZSlcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBCYWRSZXF1ZXN0IGV4dGVuZHMgQXBwRXJyb3Ige1xyXG4gIHN0YXRpYyBTVEFUVVMgPSA0MDBcclxuICBjb25zdHJ1Y3RvciAoY29kZSwgbWVzc2FnZSwgc3RhdHVzID0gQmFkUmVxdWVzdC5TVEFUVVMpIHtcclxuICAgIHN1cGVyKGNvZGUsIG1lc3NhZ2UsIHN0YXR1cylcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBVbmF1dGhvcml6ZWQgZXh0ZW5kcyBBcHBFcnJvciB7XHJcbiAgc3RhdGljIFNUQVRVUyA9IDQwMVxyXG4gIGNvbnN0cnVjdG9yIChjb2RlLCBtZXNzYWdlLCBzdGF0dXMgPSBVbmF1dGhvcml6ZWQuU1RBVFVTKSB7XHJcbiAgICBzdXBlcihjb2RlLCBtZXNzYWdlLCBzdGF0dXMpXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRm9yYmlkZGVuIGV4dGVuZHMgQXBwRXJyb3Ige1xyXG4gIHN0YXRpYyBTVEFUVVMgPSA0MDNcclxuICBjb25zdHJ1Y3RvciAoY29kZSwgbWVzc2FnZSwgc3RhdHVzID0gRm9yYmlkZGVuLlNUQVRVUykge1xyXG4gICAgc3VwZXIoY29kZSwgbWVzc2FnZSwgc3RhdHVzKVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE5vdEZvdW5kIGV4dGVuZHMgQXBwRXJyb3Ige1xyXG4gIHN0YXRpYyBTVEFUVVMgPSA0MDRcclxuICBjb25zdHJ1Y3RvciAoY29kZSwgbWVzc2FnZSwgc3RhdHVzID0gTm90Rm91bmQuU1RBVFVTKSB7XHJcbiAgICBzdXBlcihjb2RlLCBtZXNzYWdlLCBzdGF0dXMpXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZmxpY3QgZXh0ZW5kcyBBcHBFcnJvciB7XHJcbiAgc3RhdGljIFNUQVRVUyA9IDQwOVxyXG4gIGNvbnN0cnVjdG9yIChjb2RlLCBtZXNzYWdlLCBzdGF0dXMgPSBDb25mbGljdC5TVEFUVVMpIHtcclxuICAgIHN1cGVyKGNvZGUsIG1lc3NhZ2UsIHN0YXR1cylcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBCYWRFbnRpdHkgZXh0ZW5kcyBBcHBFcnJvciB7XHJcbiAgc3RhdGljIFNUQVRVUyA9IDQyMlxyXG4gIGNvbnN0cnVjdG9yIChjb2RlLCBtZXNzYWdlLCBzdGF0dXMgPSBCYWRFbnRpdHkuU1RBVFVTKSB7XHJcbiAgICBzdXBlcihjb2RlLCBtZXNzYWdlLCBzdGF0dXMpXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgSW50ZXJuYWxTZXJ2ZXJFcnJvciBleHRlbmRzIEFwcEVycm9yIHtcclxuICBzdGF0aWMgU1RBVFVTID0gNTAwXHJcbiAgY29uc3RydWN0b3IgKGNvZGUgPSBJTlRFUk5BTF9TRVJWRVJfUFJPQkxFTSwgbWVzc2FnZSwgc3RhdHVzID0gSW50ZXJuYWxTZXJ2ZXJFcnJvci5TVEFUVVMpIHtcclxuICAgIHN1cGVyKGNvZGUsIG1lc3NhZ2UsIHN0YXR1cylcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDYWxsYmFja0ZhaWxFcnJvciBleHRlbmRzIEFwcEVycm9yIHtcclxuICBzdGF0aWMgU1RBVFVTID0gNTAwXHJcbiAgY29uc3RydWN0b3IgKGNvZGUsIG1lc3NhZ2UsIHN0YXR1cyA9IENhbGxiYWNrRmFpbEVycm9yLlNUQVRVUykge1xyXG4gICAgc3VwZXIoY29kZSwgbWVzc2FnZSwgc3RhdHVzKVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEludGVycnVwdEVycm9yIGV4dGVuZHMgQXBwRXJyb3Ige1xyXG4gIHN0YXRpYyBTVEFUVVMgPSA1MDBcclxuICBjb25zdHJ1Y3RvciAoY29kZSwgbWVzc2FnZSwgc3RhdHVzID0gSW50ZXJydXB0RXJyb3IuU1RBVFVTKSB7XHJcbiAgICBzdXBlcihjb2RlLCBtZXNzYWdlLCBzdGF0dXMpXHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDTyxNQUFNQSxPQUFPLEdBQUcsU0FBUztBQUFBO0FBQ3pCLE1BQU1DLGdCQUFnQixHQUFHLGtCQUFrQjtBQUFBO0FBQzNDLE1BQU1DLGNBQWMsR0FBRyxnQkFBZ0I7QUFBQTtBQUN2QyxNQUFNQyxlQUFlLEdBQUcsaUJBQWlCO0FBQUE7QUFDekMsTUFBTUMsWUFBWSxHQUFHLGNBQWM7QUFBQTtBQUNuQyxNQUFNQyxlQUFlLEdBQUcsaUJBQWlCO0FBQUE7QUFDekMsTUFBTUMsT0FBTyxHQUFHLFNBQVM7QUFBQTtBQUN6QixNQUFNQyxVQUFVLEdBQUcs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