"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = authenticateRoutes;
var _express = require("express");
var _lodash = _interopRequireDefault(require("lodash"));
var _joi = _interopRequireDefault(require("joi"));
var _asyncHandler = _interopRequireDefault(require("@global-common/server/routes/helper/asyncHandler"));
var _authenticateController = require("@diary-server/controller/authenticate-controller");
var _validator = require("@global-common/utils/validator");
var _utils = require("@global-common/server/routes/helper/utils");
var _userGuard = require("@diary-server/routes/middleware/userGuard");
var _makeJwt = require("@global-common/utils/make-jwt");
var _enum = require("@global-common/constants/enum");
var _user = require("@global-common/db/model/user");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function authenticateRoutes(router = (0, _express.Router)()) {
  // 사용자 회원가입
  router.post('/auth/join', (0, _asyncHandler.default)(postJoin));
  // 사용자 로그인
  router.post('/auth/login', (0, _asyncHandler.default)(postLogin));
  // 사용자 로그아웃
  router.post('/auth/logout', _userGuard.diaryGuard, (0, _asyncHandler.default)(postLogout));
  // 사용자 신규 accessToken 발급
  router.put('/auth/tokenRefresh', _userGuard.reissueGuard, (0, _asyncHandler.default)(putTokenRefresh));
  async function postJoin(req, res) {
    const body = (0, _validator.validateInputData)(req.body, {
      name: _joi.default.string().required(),
      email: _joi.default.string().required(),
      password: _joi.default.string().min(8).required(),
      gender: _joi.default.string().required().valid(..._lodash.default.values(_user.UserGender)),
      birthDate: _joi.default.date().required()
    });
    await (0, _authenticateController.userJoin)(body);
    (0, _utils.sendOk)(res);
  }
  async function postLogin(req, res) {
    const {
      email,
      password
    } = (0, _validator.validateInputData)(req.body, {
      email: _joi.default.string().email().required(),
      password: _joi.default.string().required()
    });
    const result = await (0, _authenticateController.userLogin)(email, password);
    res.json(result);
  }
  async function postLogout(req, res) {
    await (0, _authenticateController.userLogout)(req.user.id);
    (0, _utils.sendOk)(res);
  }
  async function putTokenRefresh(req, res) {
    const result = (0, _makeJwt.makeNewAccessToken)(req.user.id, _enum.UserType.Diary);
    res.json(result);
  }
  return router;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoZW50aWNhdGVSb3V0ZXMiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwiYXN5bmNIYW5kbGVyIiwicG9zdEpvaW4iLCJwb3N0TG9naW4iLCJkaWFyeUd1YXJkIiwicG9zdExvZ291dCIsInB1dCIsInJlaXNzdWVHdWFyZCIsInB1dFRva2VuUmVmcmVzaCIsInJlcSIsInJlcyIsImJvZHkiLCJ2YWxpZGF0ZUlucHV0RGF0YSIsIm5hbWUiLCJKb2kiLCJzdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsIiwicGFzc3dvcmQiLCJtaW4iLCJnZW5kZXIiLCJ2YWxpZCIsIl8iLCJ2YWx1ZXMiLCJVc2VyR2VuZGVyIiwiYmlydGhEYXRlIiwiZGF0ZSIsInVzZXJKb2luIiwic2VuZE9rIiwicmVzdWx0IiwidXNlckxvZ2luIiwianNvbiIsInVzZXJMb2dvdXQiLCJ1c2VyIiwiaWQiLCJtYWtlTmV3QWNjZXNzVG9rZW4iLCJVc2VyVHlwZSIsIkRpYXJ5Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2RpYXJ5LXNlcnZlci9yb3V0ZXMvZGVmYXVsdC1sb2FkL2F1dGhlbnRpY2F0ZS1yb3V0ZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xyXG5pbXBvcnQgSm9pIGZyb20gJ2pvaSdcclxuXHJcbmltcG9ydCBhc3luY0hhbmRsZXIgZnJvbSAnQGdsb2JhbC1jb21tb24vc2VydmVyL3JvdXRlcy9oZWxwZXIvYXN5bmNIYW5kbGVyJ1xyXG5pbXBvcnQgeyB1c2VySm9pbiwgdXNlckxvZ2luLCB1c2VyTG9nb3V0IH0gZnJvbSAnQGRpYXJ5LXNlcnZlci9jb250cm9sbGVyL2F1dGhlbnRpY2F0ZS1jb250cm9sbGVyJ1xyXG5pbXBvcnQgeyB2YWxpZGF0ZUlucHV0RGF0YSB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3V0aWxzL3ZhbGlkYXRvcidcclxuaW1wb3J0IHsgc2VuZE9rIH0gZnJvbSAnQGdsb2JhbC1jb21tb24vc2VydmVyL3JvdXRlcy9oZWxwZXIvdXRpbHMnXHJcbmltcG9ydCB7IGRpYXJ5R3VhcmQsIHJlaXNzdWVHdWFyZCB9IGZyb20gJ0BkaWFyeS1zZXJ2ZXIvcm91dGVzL21pZGRsZXdhcmUvdXNlckd1YXJkJ1xyXG5pbXBvcnQgeyBtYWtlTmV3QWNjZXNzVG9rZW4gfSBmcm9tICdAZ2xvYmFsLWNvbW1vbi91dGlscy9tYWtlLWp3dCdcclxuaW1wb3J0IHsgVXNlclR5cGUgfSBmcm9tICdAZ2xvYmFsLWNvbW1vbi9jb25zdGFudHMvZW51bSdcclxuaW1wb3J0IHsgVXNlckdlbmRlciB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL2RiL21vZGVsL3VzZXInXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdXRoZW50aWNhdGVSb3V0ZXMgKHJvdXRlciA9IFJvdXRlcigpKSB7XHJcbiAgLy8g7IKs7Jqp7J6QIO2ajOybkOqwgOyehVxyXG4gIHJvdXRlci5wb3N0KCcvYXV0aC9qb2luJywgYXN5bmNIYW5kbGVyKHBvc3RKb2luKSlcclxuICAvLyDsgqzsmqnsnpAg66Gc6re47J24XHJcbiAgcm91dGVyLnBvc3QoJy9hdXRoL2xvZ2luJywgYXN5bmNIYW5kbGVyKHBvc3RMb2dpbikpXHJcbiAgLy8g7IKs7Jqp7J6QIOuhnOq3uOyVhOybg1xyXG4gIHJvdXRlci5wb3N0KCcvYXV0aC9sb2dvdXQnLCBkaWFyeUd1YXJkLCBhc3luY0hhbmRsZXIocG9zdExvZ291dCkpXHJcbiAgLy8g7IKs7Jqp7J6QIOyLoOq3nCBhY2Nlc3NUb2tlbiDrsJzquIlcclxuICByb3V0ZXIucHV0KCcvYXV0aC90b2tlblJlZnJlc2gnLCByZWlzc3VlR3VhcmQsIGFzeW5jSGFuZGxlcihwdXRUb2tlblJlZnJlc2gpKVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBwb3N0Sm9pbiAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IGJvZHkgPSB2YWxpZGF0ZUlucHV0RGF0YShyZXEuYm9keSwge1xyXG4gICAgICBuYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgICAgZW1haWw6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgICBwYXNzd29yZDogSm9pLnN0cmluZygpLm1pbig4KS5yZXF1aXJlZCgpLFxyXG4gICAgICBnZW5kZXI6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLnZhbGlkKC4uLl8udmFsdWVzKFVzZXJHZW5kZXIpKSxcclxuICAgICAgYmlydGhEYXRlOiBKb2kuZGF0ZSgpLnJlcXVpcmVkKCksXHJcbiAgICB9KVxyXG5cclxuICAgIGF3YWl0IHVzZXJKb2luKGJvZHkpXHJcblxyXG4gICAgc2VuZE9rKHJlcylcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3RMb2dpbiAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB2YWxpZGF0ZUlucHV0RGF0YShyZXEuYm9keSwge1xyXG4gICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcclxuICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgfSlcclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB1c2VyTG9naW4oZW1haWwsIHBhc3N3b3JkKVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3RMb2dvdXQgKHJlcSwgcmVzKSB7XHJcbiAgICBhd2FpdCB1c2VyTG9nb3V0KHJlcS51c2VyLmlkKVxyXG5cclxuICAgIHNlbmRPayhyZXMpXHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBwdXRUb2tlblJlZnJlc2ggKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBtYWtlTmV3QWNjZXNzVG9rZW4ocmVxLnVzZXIuaWQsIFVzZXJUeXBlLkRpYXJ5KVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClc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