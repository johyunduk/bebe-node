"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = authenticateRoutes;
var _express = require("express");
var _lodash = _interopRequireDefault(require("lodash"));
var _joi = _interopRequireDefault(require("joi"));
var _asyncHandler = _interopRequireDefault(require("@global-common/server/routes/helper/asyncHandler"));
var _authenticateController = require("@diary-server/controller/authenticate-controller");
var _validator = require("@global-common/utils/validator");
var _utils = require("@global-common/server/routes/helper/utils");
var _userGuard = require("@diary-server/routes/middleware/userGuard");
var _makeJwt = require("@global-common/utils/make-jwt");
var _enum = require("@global-common/constants/enum");
var _user = require("@global-common/db/model/user");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function authenticateRoutes(router = (0, _express.Router)()) {
  // 다이어리 사용자 회원가입
  router.post('/diary/auth/join', (0, _asyncHandler.default)(postJoin));
  // 다이어리 사용자 로그인
  router.post('/diary/auth/login', (0, _asyncHandler.default)(postLogin));
  // 다이어리 사용자 로그아웃
  router.post('/diary/auth/logout', _userGuard.diaryGuard, (0, _asyncHandler.default)(postLogout));
  // 다이어리 사용자 신규 accessToken 발급
  router.put('/diary/auth/tokenRefresh', _userGuard.reissueGuard, (0, _asyncHandler.default)(putTokenRefresh));
  async function postJoin(req, res) {
    const body = (0, _validator.validateInputData)(req.body, {
      name: _joi.default.string().required(),
      email: _joi.default.string().required(),
      password: _joi.default.string().min(8).required(),
      gender: _joi.default.string().required().allow(..._lodash.default.keys(_user.UserGender)),
      birthDate: _joi.default.date().required()
    });
    await (0, _authenticateController.userJoin)(body);
    (0, _utils.sendOk)(res);
  }
  async function postLogin(req, res) {
    const {
      email,
      password
    } = (0, _validator.validateInputData)(req.body, {
      email: _joi.default.string().email().required(),
      password: _joi.default.string().required()
    });
    const result = await (0, _authenticateController.userLogin)(email, password);
    res.json(result);
  }
  async function postLogout(req, res) {
    await (0, _authenticateController.userLogout)(req.user.id);
    (0, _utils.sendOk)(res);
  }
  async function putTokenRefresh(req, res) {
    const result = (0, _makeJwt.makeNewAccessToken)(req.user.id, _enum.UserType.Diary);
    res.json(result);
  }
  return router;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoZW50aWNhdGVSb3V0ZXMiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwiYXN5bmNIYW5kbGVyIiwicG9zdEpvaW4iLCJwb3N0TG9naW4iLCJkaWFyeUd1YXJkIiwicG9zdExvZ291dCIsInB1dCIsInJlaXNzdWVHdWFyZCIsInB1dFRva2VuUmVmcmVzaCIsInJlcSIsInJlcyIsImJvZHkiLCJ2YWxpZGF0ZUlucHV0RGF0YSIsIm5hbWUiLCJKb2kiLCJzdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsIiwicGFzc3dvcmQiLCJtaW4iLCJnZW5kZXIiLCJhbGxvdyIsIl8iLCJrZXlzIiwiVXNlckdlbmRlciIsImJpcnRoRGF0ZSIsImRhdGUiLCJ1c2VySm9pbiIsInNlbmRPayIsInJlc3VsdCIsInVzZXJMb2dpbiIsImpzb24iLCJ1c2VyTG9nb3V0IiwidXNlciIsImlkIiwibWFrZU5ld0FjY2Vzc1Rva2VuIiwiVXNlclR5cGUiLCJEaWFyeSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kaWFyeS1zZXJ2ZXIvcm91dGVzL2RlZmF1bHQtbG9hZC9hdXRoZW50aWNhdGUtcm91dGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcclxuaW1wb3J0IEpvaSBmcm9tICdqb2knXHJcblxyXG5pbXBvcnQgYXN5bmNIYW5kbGVyIGZyb20gJ0BnbG9iYWwtY29tbW9uL3NlcnZlci9yb3V0ZXMvaGVscGVyL2FzeW5jSGFuZGxlcidcclxuaW1wb3J0IHsgdXNlckpvaW4sIHVzZXJMb2dpbiwgdXNlckxvZ291dCB9IGZyb20gJ0BkaWFyeS1zZXJ2ZXIvY29udHJvbGxlci9hdXRoZW50aWNhdGUtY29udHJvbGxlcidcclxuaW1wb3J0IHsgdmFsaWRhdGVJbnB1dERhdGEgfSBmcm9tICdAZ2xvYmFsLWNvbW1vbi91dGlscy92YWxpZGF0b3InXHJcbmltcG9ydCB7IHNlbmRPayB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3NlcnZlci9yb3V0ZXMvaGVscGVyL3V0aWxzJ1xyXG5pbXBvcnQgeyBkaWFyeUd1YXJkLCByZWlzc3VlR3VhcmQgfSBmcm9tICdAZGlhcnktc2VydmVyL3JvdXRlcy9taWRkbGV3YXJlL3VzZXJHdWFyZCdcclxuaW1wb3J0IHsgbWFrZU5ld0FjY2Vzc1Rva2VuIH0gZnJvbSAnQGdsb2JhbC1jb21tb24vdXRpbHMvbWFrZS1qd3QnXHJcbmltcG9ydCB7IFVzZXJUeXBlIH0gZnJvbSAnQGdsb2JhbC1jb21tb24vY29uc3RhbnRzL2VudW0nXHJcbmltcG9ydCB7IFVzZXJHZW5kZXIgfSBmcm9tICdAZ2xvYmFsLWNvbW1vbi9kYi9tb2RlbC91c2VyJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXV0aGVudGljYXRlUm91dGVzIChyb3V0ZXIgPSBSb3V0ZXIoKSkge1xyXG4gIC8vIOuLpOydtOyWtOumrCDsgqzsmqnsnpAg7ZqM7JuQ6rCA7J6FXHJcbiAgcm91dGVyLnBvc3QoJy9kaWFyeS9hdXRoL2pvaW4nLCBhc3luY0hhbmRsZXIocG9zdEpvaW4pKVxyXG4gIC8vIOuLpOydtOyWtOumrCDsgqzsmqnsnpAg66Gc6re47J24XHJcbiAgcm91dGVyLnBvc3QoJy9kaWFyeS9hdXRoL2xvZ2luJywgYXN5bmNIYW5kbGVyKHBvc3RMb2dpbikpXHJcbiAgLy8g64uk7J207Ja066asIOyCrOyaqeyekCDroZzqt7jslYTsm4NcclxuICByb3V0ZXIucG9zdCgnL2RpYXJ5L2F1dGgvbG9nb3V0JywgZGlhcnlHdWFyZCwgYXN5bmNIYW5kbGVyKHBvc3RMb2dvdXQpKVxyXG4gIC8vIOuLpOydtOyWtOumrCDsgqzsmqnsnpAg7Iug6recIGFjY2Vzc1Rva2VuIOuwnOq4iVxyXG4gIHJvdXRlci5wdXQoJy9kaWFyeS9hdXRoL3Rva2VuUmVmcmVzaCcsIHJlaXNzdWVHdWFyZCwgYXN5bmNIYW5kbGVyKHB1dFRva2VuUmVmcmVzaCkpXHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3RKb2luIChyZXEsIHJlcykge1xyXG4gICAgY29uc3QgYm9keSA9IHZhbGlkYXRlSW5wdXREYXRhKHJlcS5ib2R5LCB7XHJcbiAgICAgIG5hbWU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgICBlbWFpbDogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXHJcbiAgICAgIHBhc3N3b3JkOiBKb2kuc3RyaW5nKCkubWluKDgpLnJlcXVpcmVkKCksXHJcbiAgICAgIGdlbmRlcjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCkuYWxsb3coLi4uXy5rZXlzKFVzZXJHZW5kZXIpKSxcclxuICAgICAgYmlydGhEYXRlOiBKb2kuZGF0ZSgpLnJlcXVpcmVkKCksXHJcbiAgICB9KVxyXG5cclxuICAgIGF3YWl0IHVzZXJKb2luKGJvZHkpXHJcblxyXG4gICAgc2VuZE9rKHJlcylcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3RMb2dpbiAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB2YWxpZGF0ZUlucHV0RGF0YShyZXEuYm9keSwge1xyXG4gICAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSxcclxuICAgICAgcGFzc3dvcmQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgfSlcclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB1c2VyTG9naW4oZW1haWwsIHBhc3N3b3JkKVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3RMb2dvdXQgKHJlcSwgcmVzKSB7XHJcbiAgICBhd2FpdCB1c2VyTG9nb3V0KHJlcS51c2VyLmlkKVxyXG5cclxuICAgIHNlbmRPayhyZXMpXHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBwdXRUb2tlblJlZnJlc2ggKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBtYWtlTmV3QWNjZXNzVG9rZW4ocmVxLnVzZXIuaWQsIFVzZXJUeXBlLkRpYXJ5KVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClcclxuICB9XHJcblxyXG4gIHJldHVybiByb3V0ZXJcclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBeUQ7QUFFMUMsU0FBU0Esa0JBQWtCLENBQUVDLE1BQU0sR0FBRyxJQUFBQyxlQUFNLEdBQUUsRUFBRTtFQUM3RDtFQUNBRCxNQUFNLENBQUNFLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxJQUFBQyxxQkFBWSxFQUFDQyxRQUFRLENBQUMsQ0FBQztFQUN2RDtFQUNBSixNQUFNLENBQUNFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxJQUFBQyxxQkFBWSxFQUFDRSxTQUFTLENBQUMsQ0FBQztFQUN6RDtFQUNBTCxNQUFNLENBQUNFLElBQUksQ0FBQyxvQkFBb0IsRUFBRUkscUJBQVUsRUFBRSxJQUFBSCxxQkFBWSxFQUFDSSxVQUFVLENBQUMsQ0FBQztFQUN2RTtFQUNBUCxNQUFNLENBQUNRLEdBQUcsQ0FBQywwQkFBMEIsRUFBRUMsdUJBQVksRUFBRSxJQUFBTixxQkFBWSxFQUFDTyxlQUFlLENBQUMsQ0FBQztFQUVuRixlQUFlTixRQUFRLENBQUVPLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ2pDLE1BQU1DLElBQUksR0FBRyxJQUFBQyw0QkFBaUIsRUFBQ0gsR0FBRyxDQUFDRSxJQUFJLEVBQUU7TUFDdkNFLElBQUksRUFBRUMsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsUUFBUSxFQUFFO01BQzdCQyxLQUFLLEVBQUVILFlBQUcsQ0FBQ0MsTUFBTSxFQUFFLENBQUNDLFFBQVEsRUFBRTtNQUM5QkUsUUFBUSxFQUFFSixZQUFHLENBQUNDLE1BQU0sRUFBRSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNILFFBQVEsRUFBRTtNQUN4Q0ksTUFBTSxFQUFFTixZQUFHLENBQUNDLE1BQU0sRUFBRSxDQUFDQyxRQUFRLEVBQUUsQ0FBQ0ssS0FBSyxDQUFDLEdBQUdDLGVBQUMsQ0FBQ0MsSUFBSSxDQUFDQyxnQkFBVSxDQUFDLENBQUM7TUFDNURDLFNBQVMsRUFBRVgsWUFBRyxDQUFDWSxJQUFJLEVBQUUsQ0FBQ1YsUUFBUTtJQUNoQyxDQUFDLENBQUM7SUFFRixNQUFNLElBQUFXLGdDQUFRLEVBQUNoQixJQUFJLENBQUM7SUFFcEIsSUFBQWlCLGFBQU0sRUFBQ2xCLEdBQUcsQ0FBQztFQUNiO0VBRUEsZUFBZVAsU0FBUyxDQUFFTSxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUNsQyxNQUFNO01BQUVPLEtBQUs7TUFBRUM7SUFBUyxDQUFDLEdBQUcsSUFBQU4sNEJBQWlCLEVBQUNILEdBQUcsQ0FBQ0UsSUFBSSxFQUFFO01BQ3RETSxLQUFLLEVBQUVILFlBQUcsQ0FBQ0MsTUFBTSxFQUFFLENBQUNFLEtBQUssRUFBRSxDQUFDRCxRQUFRLEVBQUU7TUFDdENFLFFBQVEsRUFBRUosWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsUUFBUTtJQUNqQyxDQUFDLENBQUM7SUFFRixNQUFNYSxNQUFNLEdBQUcsTUFBTSxJQUFBQyxpQ0FBUyxFQUFDYixLQUFLLEVBQUVDLFFBQVEsQ0FBQztJQUUvQ1IsR0FBRyxDQUFDcUIsSUFBSSxDQUFDRixNQUFNLENBQUM7RUFDbEI7RUFFQSxlQUFleEIsVUFBVSxDQUFFSSxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUNuQyxNQUFNLElBQUFzQixrQ0FBVSxFQUFDdkIsR0FBRyxDQUFDd0IsSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFFN0IsSUFBQU4sYUFBTSxFQUFDbEIsR0FBRyxDQUFDO0VBQ2I7RUFFQSxlQUFlRixlQUFlLENBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ3hDLE1BQU1tQixNQUFNLEdBQUcsSUFBQU0sMkJBQWtCLEVBQUMxQixHQUFHLENBQUN3QixJQUFJLENBQUNDLEVBQUUsRUFBRUUsY0FBUSxDQUFDQyxLQUFLLENBQUM7SUFFOUQzQixHQUFHLENBQUNxQixJQUFJLENBQUNGLE1BQU0sQ0FBQztFQUNsQjtFQUVBLE9BQU8vQixNQUFNO0FBQ2YifQ==