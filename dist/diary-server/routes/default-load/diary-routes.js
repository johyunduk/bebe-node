"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diaryRoutes;
var _express = require("express");
var _asyncHandler = _interopRequireDefault(require("@global-common/server/routes/helper/asyncHandler"));
var _diaryController = require("@diary-server/controller/diary-controller");
var _validator = require("@global-common/utils/validator");
var _joi = _interopRequireDefault(require("joi"));
var _utils = require("@global-common/server/routes/helper/utils");
var _userGuard = require("@diary-server/routes/middleware/userGuard");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function diaryRoutes(router = (0, _express.Router)()) {
  // 육아일기 목록
  router.get('/diary', _userGuard.diaryGuard, (0, _asyncHandler.default)(getDiaryList));
  // 육아일기 상세 조회
  router.get('/diary/detail/:id', _userGuard.diaryGuard, (0, _asyncHandler.default)(getDiaryDetail));
  // 육아일기 작성
  router.post('/diary', _userGuard.diaryGuard, (0, _asyncHandler.default)(postDiary));
  async function getDiaryList(req, res) {
    const result = await (0, _diaryController.loadDiaryList)(req.user.id);
    res.json(result);
  }
  async function getDiaryDetail(req, res) {
    const {
      id
    } = req.params;
    const result = await (0, _diaryController.loadDiaryDetail)(id, req.user.id);
    res.json(result);
  }
  async function postDiary(req, res) {
    const body = (0, _validator.validateInputData)(req.body, {
      title: _joi.default.string().required(),
      content: _joi.default.string().required(),
      weight: _joi.default.number().positive().precision(2),
      height: _joi.default.number().positive().precision(2)
    });
    await (0, _diaryController.saveDiary)(body, req.user.id);
    (0, _utils.sendOk)(res);
  }
  return router;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkaWFyeVJvdXRlcyIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImRpYXJ5R3VhcmQiLCJhc3luY0hhbmRsZXIiLCJnZXREaWFyeUxpc3QiLCJnZXREaWFyeURldGFpbCIsInBvc3QiLCJwb3N0RGlhcnkiLCJyZXEiLCJyZXMiLCJyZXN1bHQiLCJsb2FkRGlhcnlMaXN0IiwidXNlciIsImlkIiwianNvbiIsInBhcmFtcyIsImxvYWREaWFyeURldGFpbCIsImJvZHkiLCJ2YWxpZGF0ZUlucHV0RGF0YSIsInRpdGxlIiwiSm9pIiwic3RyaW5nIiwicmVxdWlyZWQiLCJjb250ZW50Iiwid2VpZ2h0IiwibnVtYmVyIiwicG9zaXRpdmUiLCJwcmVjaXNpb24iLCJoZWlnaHQiLCJzYXZlRGlhcnkiLCJzZW5kT2siXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZGlhcnktc2VydmVyL3JvdXRlcy9kZWZhdWx0LWxvYWQvZGlhcnktcm91dGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCBhc3luY0hhbmRsZXIgZnJvbSAnQGdsb2JhbC1jb21tb24vc2VydmVyL3JvdXRlcy9oZWxwZXIvYXN5bmNIYW5kbGVyJ1xyXG5pbXBvcnQgeyBsb2FkRGlhcnlEZXRhaWwsIGxvYWREaWFyeUxpc3QsIHNhdmVEaWFyeSB9IGZyb20gJ0BkaWFyeS1zZXJ2ZXIvY29udHJvbGxlci9kaWFyeS1jb250cm9sbGVyJ1xyXG5pbXBvcnQgeyB2YWxpZGF0ZUlucHV0RGF0YSB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3V0aWxzL3ZhbGlkYXRvcidcclxuaW1wb3J0IEpvaSBmcm9tICdqb2knXHJcbmltcG9ydCB7IHNlbmRPayB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3NlcnZlci9yb3V0ZXMvaGVscGVyL3V0aWxzJ1xyXG5pbXBvcnQgeyBkaWFyeUd1YXJkIH0gZnJvbSAnQGRpYXJ5LXNlcnZlci9yb3V0ZXMvbWlkZGxld2FyZS91c2VyR3VhcmQnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaWFyeVJvdXRlcyAocm91dGVyID0gUm91dGVyKCkpIHtcclxuICAvLyDsnKHslYTsnbzquLAg66qp66GdXHJcbiAgcm91dGVyLmdldCgnL2RpYXJ5JywgZGlhcnlHdWFyZCwgYXN5bmNIYW5kbGVyKGdldERpYXJ5TGlzdCkpXHJcbiAgLy8g7Jyh7JWE7J286riwIOyDgeyEuCDsobDtmoxcclxuICByb3V0ZXIuZ2V0KCcvZGlhcnkvZGV0YWlsLzppZCcsIGRpYXJ5R3VhcmQsIGFzeW5jSGFuZGxlcihnZXREaWFyeURldGFpbCkpXHJcbiAgLy8g7Jyh7JWE7J286riwIOyekeyEsVxyXG4gIHJvdXRlci5wb3N0KCcvZGlhcnknLCBkaWFyeUd1YXJkLCBhc3luY0hhbmRsZXIocG9zdERpYXJ5KSlcclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gZ2V0RGlhcnlMaXN0IChyZXEsIHJlcykge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbG9hZERpYXJ5TGlzdChyZXEudXNlci5pZClcclxuXHJcbiAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBnZXREaWFyeURldGFpbCAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXNcclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBsb2FkRGlhcnlEZXRhaWwoaWQsIHJlcS51c2VyLmlkKVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHBvc3REaWFyeSAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IGJvZHkgPSB2YWxpZGF0ZUlucHV0RGF0YShyZXEuYm9keSwge1xyXG4gICAgICB0aXRsZTogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXHJcbiAgICAgIGNvbnRlbnQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgICB3ZWlnaHQ6IEpvaS5udW1iZXIoKS5wb3NpdGl2ZSgpLnByZWNpc2lvbigyKSxcclxuICAgICAgaGVpZ2h0OiBKb2kubnVtYmVyKCkucG9zaXRpdmUoKS5wcmVjaXNpb24oMiksXHJcbiAgICB9KVxyXG5cclxuICAgIGF3YWl0IHNhdmVEaWFyeShib2R5LCByZXEudXNlci5pZClcclxuXHJcbiAgICBzZW5kT2socmVzKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJvdXRlclxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBc0U7QUFFdkQsU0FBU0EsV0FBVyxDQUFFQyxNQUFNLEdBQUcsSUFBQUMsZUFBTSxHQUFFLEVBQUU7RUFDdEQ7RUFDQUQsTUFBTSxDQUFDRSxHQUFHLENBQUMsUUFBUSxFQUFFQyxxQkFBVSxFQUFFLElBQUFDLHFCQUFZLEVBQUNDLFlBQVksQ0FBQyxDQUFDO0VBQzVEO0VBQ0FMLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLG1CQUFtQixFQUFFQyxxQkFBVSxFQUFFLElBQUFDLHFCQUFZLEVBQUNFLGNBQWMsQ0FBQyxDQUFDO0VBQ3pFO0VBQ0FOLE1BQU0sQ0FBQ08sSUFBSSxDQUFDLFFBQVEsRUFBRUoscUJBQVUsRUFBRSxJQUFBQyxxQkFBWSxFQUFDSSxTQUFTLENBQUMsQ0FBQztFQUUxRCxlQUFlSCxZQUFZLENBQUVJLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ3JDLE1BQU1DLE1BQU0sR0FBRyxNQUFNLElBQUFDLDhCQUFhLEVBQUNILEdBQUcsQ0FBQ0ksSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFFL0NKLEdBQUcsQ0FBQ0ssSUFBSSxDQUFDSixNQUFNLENBQUM7RUFDbEI7RUFFQSxlQUFlTCxjQUFjLENBQUVHLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ3ZDLE1BQU07TUFBRUk7SUFBRyxDQUFDLEdBQUdMLEdBQUcsQ0FBQ08sTUFBTTtJQUV6QixNQUFNTCxNQUFNLEdBQUcsTUFBTSxJQUFBTSxnQ0FBZSxFQUFDSCxFQUFFLEVBQUVMLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFFckRKLEdBQUcsQ0FBQ0ssSUFBSSxDQUFDSixNQUFNLENBQUM7RUFDbEI7RUFFQSxlQUFlSCxTQUFTLENBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ2xDLE1BQU1RLElBQUksR0FBRyxJQUFBQyw0QkFBaUIsRUFBQ1YsR0FBRyxDQUFDUyxJQUFJLEVBQUU7TUFDdkNFLEtBQUssRUFBRUMsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsUUFBUSxFQUFFO01BQzlCQyxPQUFPLEVBQUVILFlBQUcsQ0FBQ0MsTUFBTSxFQUFFLENBQUNDLFFBQVEsRUFBRTtNQUNoQ0UsTUFBTSxFQUFFSixZQUFHLENBQUNLLE1BQU0sRUFBRSxDQUFDQyxRQUFRLEVBQUUsQ0FBQ0MsU0FBUyxDQUFDLENBQUMsQ0FBQztNQUM1Q0MsTUFBTSxFQUFFUixZQUFHLENBQUNLLE1BQU0sRUFBRSxDQUFDQyxRQUFRLEVBQUUsQ0FBQ0MsU0FBUyxDQUFDLENBQUM7SUFDN0MsQ0FBQyxDQUFDO0lBRUYsTUFBTSxJQUFBRSwwQkFBUyxFQUFDWixJQUFJLEVBQUVULEdBQUcsQ0FBQ0ksSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFFbEMsSUFBQWlCLGFBQU0sRUFBQ3JCLEdBQUcsQ0FBQztFQUNiO0VBRUEsT0FBT1YsTUFBTTtBQUNmIn0=