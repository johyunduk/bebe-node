"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diaryRoutes;
var _express = require("express");
var _asyncHandler = _interopRequireDefault(require("@global-common/server/routes/helper/asyncHandler"));
var _diaryController = require("@diary-server/controller/diary-controller");
var _validator = require("@global-common/utils/validator");
var _joi = _interopRequireDefault(require("joi"));
var _utils = require("@global-common/server/routes/helper/utils");
var _userGuard = require("@diary-server/routes/middleware/userGuard");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function diaryRoutes(router = (0, _express.Router)()) {
  // 육아일기 목록
  router.get('/diary', _userGuard.diaryGuard, (0, _asyncHandler.default)(getDiaryList));
  // 육아일기 상세 조회
  router.get('/diary/detail/:id', _userGuard.diaryGuard, (0, _asyncHandler.default)(getDiaryDetail));
  // 육아일기 작성
  router.post('/diary', _userGuard.diaryGuard, (0, _asyncHandler.default)(postDiary));
  // 육아일기 수정
  router.put('/diary/edit/:id', _userGuard.diaryGuard, (0, _asyncHandler.default)(putDiary));
  // 육아일기 삭제
  router.delete('/diary/delete/:id', _userGuard.diaryGuard, (0, _asyncHandler.default)(deleteDiary));
  async function getDiaryList(req, res) {
    const result = await (0, _diaryController.loadDiaryList)(req.user.id);
    res.json(result);
  }
  async function getDiaryDetail(req, res) {
    const {
      id
    } = req.params;
    const result = await (0, _diaryController.loadDiaryDetail)(id, req.user.id);
    res.json(result);
  }
  async function postDiary(req, res) {
    const body = (0, _validator.validateInputData)(req.body, {
      title: _joi.default.string().required(),
      content: _joi.default.string().required(),
      weight: _joi.default.number().positive().precision(2),
      height: _joi.default.number().positive().precision(2)
    });
    await (0, _diaryController.saveDiary)(body, req.user.id);
    (0, _utils.sendOk)(res);
  }
  async function putDiary(req, res) {
    const {
      id: diaryId
    } = req.params;
    const body = (0, _validator.validateInputData)(req.body, {
      title: _joi.default.string(),
      content: _joi.default.string(),
      weight: _joi.default.number().positive(),
      height: _joi.default.number().positive()
    });
    await (0, _diaryController.updateDiary)(body, req.user.id, diaryId);
    (0, _utils.sendOk)(res);
  }
  async function deleteDiary(req, res) {
    const {
      id: diaryId
    } = req.params;
    await (0, _diaryController.destroyDiary)(req.user.id, diaryId);
    (0, _utils.sendOk)(res);
  }
  return router;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkaWFyeVJvdXRlcyIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImRpYXJ5R3VhcmQiLCJhc3luY0hhbmRsZXIiLCJnZXREaWFyeUxpc3QiLCJnZXREaWFyeURldGFpbCIsInBvc3QiLCJwb3N0RGlhcnkiLCJwdXQiLCJwdXREaWFyeSIsImRlbGV0ZSIsImRlbGV0ZURpYXJ5IiwicmVxIiwicmVzIiwicmVzdWx0IiwibG9hZERpYXJ5TGlzdCIsInVzZXIiLCJpZCIsImpzb24iLCJwYXJhbXMiLCJsb2FkRGlhcnlEZXRhaWwiLCJib2R5IiwidmFsaWRhdGVJbnB1dERhdGEiLCJ0aXRsZSIsIkpvaSIsInN0cmluZyIsInJlcXVpcmVkIiwiY29udGVudCIsIndlaWdodCIsIm51bWJlciIsInBvc2l0aXZlIiwicHJlY2lzaW9uIiwiaGVpZ2h0Iiwic2F2ZURpYXJ5Iiwic2VuZE9rIiwiZGlhcnlJZCIsInVwZGF0ZURpYXJ5IiwiZGVzdHJveURpYXJ5Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2RpYXJ5LXNlcnZlci9yb3V0ZXMvZGVmYXVsdC1sb2FkL2RpYXJ5LXJvdXRlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xyXG5pbXBvcnQgYXN5bmNIYW5kbGVyIGZyb20gJ0BnbG9iYWwtY29tbW9uL3NlcnZlci9yb3V0ZXMvaGVscGVyL2FzeW5jSGFuZGxlcidcclxuaW1wb3J0IHtcclxuICBkZXN0cm95RGlhcnksXHJcbiAgbG9hZERpYXJ5RGV0YWlsLFxyXG4gIGxvYWREaWFyeUxpc3QsXHJcbiAgc2F2ZURpYXJ5LFxyXG4gIHVwZGF0ZURpYXJ5LFxyXG59IGZyb20gJ0BkaWFyeS1zZXJ2ZXIvY29udHJvbGxlci9kaWFyeS1jb250cm9sbGVyJ1xyXG5pbXBvcnQgeyB2YWxpZGF0ZUlucHV0RGF0YSB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3V0aWxzL3ZhbGlkYXRvcidcclxuaW1wb3J0IEpvaSBmcm9tICdqb2knXHJcbmltcG9ydCB7IHNlbmRPayB9IGZyb20gJ0BnbG9iYWwtY29tbW9uL3NlcnZlci9yb3V0ZXMvaGVscGVyL3V0aWxzJ1xyXG5pbXBvcnQgeyBkaWFyeUd1YXJkIH0gZnJvbSAnQGRpYXJ5LXNlcnZlci9yb3V0ZXMvbWlkZGxld2FyZS91c2VyR3VhcmQnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaWFyeVJvdXRlcyAocm91dGVyID0gUm91dGVyKCkpIHtcclxuICAvLyDsnKHslYTsnbzquLAg66qp66GdXHJcbiAgcm91dGVyLmdldCgnL2RpYXJ5JywgZGlhcnlHdWFyZCwgYXN5bmNIYW5kbGVyKGdldERpYXJ5TGlzdCkpXHJcbiAgLy8g7Jyh7JWE7J286riwIOyDgeyEuCDsobDtmoxcclxuICByb3V0ZXIuZ2V0KCcvZGlhcnkvZGV0YWlsLzppZCcsIGRpYXJ5R3VhcmQsIGFzeW5jSGFuZGxlcihnZXREaWFyeURldGFpbCkpXHJcbiAgLy8g7Jyh7JWE7J286riwIOyekeyEsVxyXG4gIHJvdXRlci5wb3N0KCcvZGlhcnknLCBkaWFyeUd1YXJkLCBhc3luY0hhbmRsZXIocG9zdERpYXJ5KSlcclxuICAvLyDsnKHslYTsnbzquLAg7IiY7KCVXHJcbiAgcm91dGVyLnB1dCgnL2RpYXJ5L2VkaXQvOmlkJywgZGlhcnlHdWFyZCwgYXN5bmNIYW5kbGVyKHB1dERpYXJ5KSlcclxuICAvLyDsnKHslYTsnbzquLAg7IKt7KCcXHJcbiAgcm91dGVyLmRlbGV0ZSgnL2RpYXJ5L2RlbGV0ZS86aWQnLCBkaWFyeUd1YXJkLCBhc3luY0hhbmRsZXIoZGVsZXRlRGlhcnkpKVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBnZXREaWFyeUxpc3QgKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBsb2FkRGlhcnlMaXN0KHJlcS51c2VyLmlkKVxyXG5cclxuICAgIHJlcy5qc29uKHJlc3VsdClcclxuICB9XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIGdldERpYXJ5RGV0YWlsIChyZXEsIHJlcykge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtc1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGxvYWREaWFyeURldGFpbChpZCwgcmVxLnVzZXIuaWQpXHJcblxyXG4gICAgcmVzLmpzb24ocmVzdWx0KVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gcG9zdERpYXJ5IChyZXEsIHJlcykge1xyXG4gICAgY29uc3QgYm9keSA9IHZhbGlkYXRlSW5wdXREYXRhKHJlcS5ib2R5LCB7XHJcbiAgICAgIHRpdGxlOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgICAgY29udGVudDogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXHJcbiAgICAgIHdlaWdodDogSm9pLm51bWJlcigpLnBvc2l0aXZlKCkucHJlY2lzaW9uKDIpLFxyXG4gICAgICBoZWlnaHQ6IEpvaS5udW1iZXIoKS5wb3NpdGl2ZSgpLnByZWNpc2lvbigyKSxcclxuICAgIH0pXHJcblxyXG4gICAgYXdhaXQgc2F2ZURpYXJ5KGJvZHksIHJlcS51c2VyLmlkKVxyXG5cclxuICAgIHNlbmRPayhyZXMpXHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBwdXREaWFyeSAocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHsgaWQ6IGRpYXJ5SWQgfSA9IHJlcS5wYXJhbXNcclxuXHJcbiAgICBjb25zdCBib2R5ID0gdmFsaWRhdGVJbnB1dERhdGEocmVxLmJvZHksIHtcclxuICAgICAgdGl0bGU6IEpvaS5zdHJpbmcoKSxcclxuICAgICAgY29udGVudDogSm9pLnN0cmluZygpLFxyXG4gICAgICB3ZWlnaHQ6IEpvaS5udW1iZXIoKS5wb3NpdGl2ZSgpLFxyXG4gICAgICBoZWlnaHQ6IEpvaS5udW1iZXIoKS5wb3NpdGl2ZSgpLFxyXG4gICAgfSlcclxuXHJcbiAgICBhd2FpdCB1cGRhdGVEaWFyeShib2R5LCByZXEudXNlci5pZCwgZGlhcnlJZClcclxuXHJcbiAgICBzZW5kT2socmVzKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gZGVsZXRlRGlhcnkgKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCB7IGlkOiBkaWFyeUlkIH0gPSByZXEucGFyYW1zXHJcblxyXG4gICAgYXdhaXQgZGVzdHJveURpYXJ5KHJlcS51c2VyLmlkLCBkaWFyeUlkKVxyXG5cclxuICAgIHNlbmRPayhyZXMpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gcm91dGVyXHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUFzRTtBQUV2RCxTQUFTQSxXQUFXLENBQUVDLE1BQU0sR0FBRyxJQUFBQyxlQUFNLEdBQUUsRUFBRTtFQUN0RDtFQUNBRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxRQUFRLEVBQUVDLHFCQUFVLEVBQUUsSUFBQUMscUJBQVksRUFBQ0MsWUFBWSxDQUFDLENBQUM7RUFDNUQ7RUFDQUwsTUFBTSxDQUFDRSxHQUFHLENBQUMsbUJBQW1CLEVBQUVDLHFCQUFVLEVBQUUsSUFBQUMscUJBQVksRUFBQ0UsY0FBYyxDQUFDLENBQUM7RUFDekU7RUFDQU4sTUFBTSxDQUFDTyxJQUFJLENBQUMsUUFBUSxFQUFFSixxQkFBVSxFQUFFLElBQUFDLHFCQUFZLEVBQUNJLFNBQVMsQ0FBQyxDQUFDO0VBQzFEO0VBQ0FSLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLGlCQUFpQixFQUFFTixxQkFBVSxFQUFFLElBQUFDLHFCQUFZLEVBQUNNLFFBQVEsQ0FBQyxDQUFDO0VBQ2pFO0VBQ0FWLE1BQU0sQ0FBQ1csTUFBTSxDQUFDLG1CQUFtQixFQUFFUixxQkFBVSxFQUFFLElBQUFDLHFCQUFZLEVBQUNRLFdBQVcsQ0FBQyxDQUFDO0VBRXpFLGVBQWVQLFlBQVksQ0FBRVEsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDckMsTUFBTUMsTUFBTSxHQUFHLE1BQU0sSUFBQUMsOEJBQWEsRUFBQ0gsR0FBRyxDQUFDSSxJQUFJLENBQUNDLEVBQUUsQ0FBQztJQUUvQ0osR0FBRyxDQUFDSyxJQUFJLENBQUNKLE1BQU0sQ0FBQztFQUNsQjtFQUVBLGVBQWVULGNBQWMsQ0FBRU8sR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDdkMsTUFBTTtNQUFFSTtJQUFHLENBQUMsR0FBR0wsR0FBRyxDQUFDTyxNQUFNO0lBRXpCLE1BQU1MLE1BQU0sR0FBRyxNQUFNLElBQUFNLGdDQUFlLEVBQUNILEVBQUUsRUFBRUwsR0FBRyxDQUFDSSxJQUFJLENBQUNDLEVBQUUsQ0FBQztJQUVyREosR0FBRyxDQUFDSyxJQUFJLENBQUNKLE1BQU0sQ0FBQztFQUNsQjtFQUVBLGVBQWVQLFNBQVMsQ0FBRUssR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDbEMsTUFBTVEsSUFBSSxHQUFHLElBQUFDLDRCQUFpQixFQUFDVixHQUFHLENBQUNTLElBQUksRUFBRTtNQUN2Q0UsS0FBSyxFQUFFQyxZQUFHLENBQUNDLE1BQU0sRUFBRSxDQUFDQyxRQUFRLEVBQUU7TUFDOUJDLE9BQU8sRUFBRUgsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsUUFBUSxFQUFFO01BQ2hDRSxNQUFNLEVBQUVKLFlBQUcsQ0FBQ0ssTUFBTSxFQUFFLENBQUNDLFFBQVEsRUFBRSxDQUFDQyxTQUFTLENBQUMsQ0FBQyxDQUFDO01BQzVDQyxNQUFNLEVBQUVSLFlBQUcsQ0FBQ0ssTUFBTSxFQUFFLENBQUNDLFFBQVEsRUFBRSxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxDQUFDLENBQUM7SUFFRixNQUFNLElBQUFFLDBCQUFTLEVBQUNaLElBQUksRUFBRVQsR0FBRyxDQUFDSSxJQUFJLENBQUNDLEVBQUUsQ0FBQztJQUVsQyxJQUFBaUIsYUFBTSxFQUFDckIsR0FBRyxDQUFDO0VBQ2I7RUFFQSxlQUFlSixRQUFRLENBQUVHLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQ2pDLE1BQU07TUFBRUksRUFBRSxFQUFFa0I7SUFBUSxDQUFDLEdBQUd2QixHQUFHLENBQUNPLE1BQU07SUFFbEMsTUFBTUUsSUFBSSxHQUFHLElBQUFDLDRCQUFpQixFQUFDVixHQUFHLENBQUNTLElBQUksRUFBRTtNQUN2Q0UsS0FBSyxFQUFFQyxZQUFHLENBQUNDLE1BQU0sRUFBRTtNQUNuQkUsT0FBTyxFQUFFSCxZQUFHLENBQUNDLE1BQU0sRUFBRTtNQUNyQkcsTUFBTSxFQUFFSixZQUFHLENBQUNLLE1BQU0sRUFBRSxDQUFDQyxRQUFRLEVBQUU7TUFDL0JFLE1BQU0sRUFBRVIsWUFBRyxDQUFDSyxNQUFNLEVBQUUsQ0FBQ0MsUUFBUTtJQUMvQixDQUFDLENBQUM7SUFFRixNQUFNLElBQUFNLDRCQUFXLEVBQUNmLElBQUksRUFBRVQsR0FBRyxDQUFDSSxJQUFJLENBQUNDLEVBQUUsRUFBRWtCLE9BQU8sQ0FBQztJQUU3QyxJQUFBRCxhQUFNLEVBQUNyQixHQUFHLENBQUM7RUFDYjtFQUVBLGVBQWVGLFdBQVcsQ0FBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDcEMsTUFBTTtNQUFFSSxFQUFFLEVBQUVrQjtJQUFRLENBQUMsR0FBR3ZCLEdBQUcsQ0FBQ08sTUFBTTtJQUVsQyxNQUFNLElBQUFrQiw2QkFBWSxFQUFDekIsR0FBRyxDQUFDSSxJQUFJLENBQUNDLEVBQUUsRUFBRWtCLE9BQU8sQ0FBQztJQUV4QyxJQUFBRCxhQUFNLEVBQUNyQixHQUFHLENBQUM7RUFDYjtFQUVBLE9BQU9kLE1BQU07QUFDZiJ9